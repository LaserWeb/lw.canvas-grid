{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 30bfedd63c8a7e0f47aa","webpack:///./canvas-grid.js","webpack:///../~/lw.canvas-filters/dist/lw.canvas-filters.js"],"names":["CanvasGrid","settings","cellSize","scaleRatio","x","y","filters","Object","assign","size","width","height","cols","rows","file","image","url","canvas","pixels","input","File","loadFromFile","Image","loadFromImage","URL","loadFromURL","trim","Promise","reject","Error","src","resolve","onload","then","catch","onerror","_loadImage","createObjectURL","_processImage","Math","round","ceil","line","context","sx","sy","sw","sh","document","createElement","getContext","fillStyle","fillRect","drawImage","push","parseInt","isNaN","col","row","pixelData","getImageData","data","color","r","g","b","a","gray","grid","coords"],"mappings":"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AAP;AAMH;;;;;;AAGL;;;SACSL,U,GAAAA,U;mBACMA,U;;;;;;ACpPf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD,qCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAU;AACV;AACA;AACA;AACA;;AAEA;;;AAGA,QAAO;AACP;AACA;;AAEA;;AAEA;AACA;AACA,GAAE;AACF;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAM,gBAAgB;;AAEtB;AACA;;AAEA;AACA;AACA;AACA,OAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,uCAAsC,QAAQ;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,EAAC;AACD;AACA,8C","file":"lw.canvas-grid.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"CanvasGrid\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"CanvasGrid\"] = factory();\n\telse\n\t\troot[\"CanvasGrid\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 30bfedd63c8a7e0f47aa","import canvasFilters from 'lw.canvas-filters'\n\n// CanvasGrid class\nclass CanvasGrid {\n    // Class constructor...\n    constructor(settings) {\n        // Init properties\n        this.cellSize   = 1024\n        this.scaleRatio = { x: 1, y: 1 }\n        this.filters    = {}\n\n        Object.assign(this, settings || {})\n\n        if (! this.scaleRatio.x) {\n            this.scaleRatio = { x: this.scaleRatio, y: this.scaleRatio }\n        }\n\n        this.size   = { width: 0, height: 0, cols: 0, rows: 0 }\n        this.file   = null\n        this.image  = null\n        this.url    = null\n        this.canvas = []\n        this.pixels = []\n    }\n\n    // <input> can be Image, File, URL object or URL string (http://* or data:image/*)\n    load(input) {\n        // Load File object\n        if (input instanceof File) {\n            return this.loadFromFile(input)\n        }\n\n        // Load Image object\n        if (input instanceof Image) {\n            return this.loadFromImage(input)\n        }\n\n        // Load URL object\n        if (typeof input === 'string' || input instanceof URL) {\n            return this.loadFromURL(input.trim())\n        }\n\n        // Return rejected promise with an Error object\n        return Promise.reject(new Error('Unsupported input format.'))\n    }\n\n    // Load image\n    _loadImage(src, reject, resolve) {\n        // Create Image object\n        let image = new Image()\n\n        // Register for load and error events\n        image.onload = event => {\n            this.loadFromImage(image).then(resolve).catch(reject)\n        }\n\n        image.onerror = event => {\n            reject(new Error('An error occurred while loading the image : ' + src))\n        }\n\n        // Load the image from File url\n        image.src = src\n    }\n\n    // Load from File object\n    loadFromFile(input) {\n        return new Promise((resolve, reject) => {\n            // Bad input type\n            if (! (input instanceof File)) {\n                reject(new Error('Input param must be a File object.'))\n            }\n\n            // Set input file\n            this.file = input\n\n            // Load image\n            this._loadImage(URL.createObjectURL(input), reject, resolve)\n        })\n    }\n\n    // Load from URL object or string\n    loadFromURL(input) {\n        return new Promise((resolve, reject) => {\n            // Bad input type\n            if (! (input instanceof URL) && typeof input !== 'string') {\n                reject(new Error('Input param must be a URL string or object.'))\n            }\n\n            // Create url object\n            let url = input instanceof URL ? input : new URL(input)\n\n            // Set url\n            this.url = url\n\n            // Load image\n            this._loadImage(url, reject, resolve)\n        })\n    }\n\n    // Load from Image object\n    loadFromImage(input) {\n        return new Promise((resolve, reject) => {\n            // Bad input type\n            if (! (input instanceof Image)) {\n                reject(new Error('Input param must be a Image object.'))\n            }\n\n            // Set input image\n            this.image = input\n\n            // Process image\n            this._processImage()\n\n            // Resolve the promise\n            resolve(this)\n        })\n    }\n\n    _processImage() {\n        // Reset canvas grid\n        this.canvas = []\n        this.pixels = []\n\n        // Calculate grid size\n        let width  = Math.round(this.image.width * this.scaleRatio.x)\n        let height = Math.round(this.image.height * this.scaleRatio.y)\n        let cols   = Math.ceil(width / this.cellSize)\n        let rows   = Math.ceil(height / this.cellSize)\n\n        this.size = { width, height, cols, rows }\n\n        // Create canvas grid\n        let line    = null\n        let canvas  = null\n        let context = null\n\n        let x  = null // cols\n        let y  = null // rows\n        let sx = null // scaled cols\n        let sy = null // scaled rows\n        let sw = null // scaled width\n        let sh = null // scaled height\n\n        // For each line\n        for (y = 0; y < this.size.rows; y++) {\n            // Reset current line\n            line = []\n\n            // For each column\n            for (x = 0; x < this.size.cols; x++) {\n                // Create canvas element\n                canvas = document.createElement('canvas')\n\n                // Set canvas size\n                if (x === 0 || x < (this.size.cols - 1)) {\n                    canvas.width = this.size.width < this.cellSize\n                                 ? this.size.width : this.cellSize\n                }\n                else {\n                    // Get the rest for the last item (except the first one)\n                    canvas.width = this.size.width % this.cellSize\n                }\n\n                if (y === 0 || y < (this.size.rows - 1)) {\n                    canvas.height = this.size.height < this.cellSize\n                                  ? this.size.height : this.cellSize\n                }\n                else {\n                    // Get the rest for the last item (except the first one)\n                    canvas.height = this.size.height % this.cellSize\n                }\n\n                // Get canvas 2d context\n                context = canvas.getContext('2d')\n\n                // Fill withe background (avoid alpha chanel calculation)\n                context.fillStyle = 'white'\n                context.fillRect(0, 0, canvas.width, canvas.height)\n\n                // Draw the part of image in the canvas (scale)\n                sw = canvas.width / this.scaleRatio.x\n                sh = canvas.height / this.scaleRatio.y\n                sx = x * this.cellSize / this.scaleRatio.x\n                sy = y * this.cellSize / this.scaleRatio.y\n\n                context.drawImage(\n                    this.image, sx, sy, sw, sh,\n                    0, 0, canvas.width, canvas.height\n                )\n\n                // Apply image filters\n                canvasFilters(canvas, this.filters)\n\n                // Add the canvas to current line\n                line.push(canvas)\n            }\n\n            // Add the line to canvas grid\n            this.canvas.push(line)\n        }\n    }\n\n    getPixel(x, y) {\n        // Test coords validity\n        x = parseInt(x)\n        y = parseInt(y)\n\n        if (isNaN(x) || isNaN(y)) {\n            throw new Error('[x, y] params must be Integer.')\n        }\n\n        // Test coords range\n        if (x < 0 || x >= this.size.width) {\n            throw new Error('Out of range: x = ' + x + ', max: ' + this.size.width)\n        }\n\n        if (y < 0 || y >= this.size.height) {\n            throw new Error('Out of range: y = ' + y + ', max: ' + this.size.height)\n        }\n\n        // Calculate target canvas coords\n        let col = parseInt(x / this.cellSize)\n        let row = parseInt(y / this.cellSize)\n\n        // Adjuste x/y values relative to canvas origin\n        col && (x -= this.cellSize * col)\n        row && (y -= this.cellSize * row)\n\n        // Get pixel data\n        let canvas    = this.canvas[row][col]\n        let context   = canvas.getContext('2d')\n        let pixelData = context.getImageData(x, y, 1, 1).data\n\n        return {\n            color : { r: pixelData[0], g: pixelData[1], b: pixelData[2], a: pixelData[3] },\n            gray  : (pixelData[0] + pixelData[1] + pixelData[2]) / 3,\n            grid  : { col, row },\n            coords: { x, y }\n        }\n    }\n}\n\n// Exports\nexport { CanvasGrid }\nexport default CanvasGrid\n\n\n\n// WEBPACK FOOTER //\n// ./canvas-grid.js","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"CanvasFilter\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"CanvasFilter\"] = factory();\n\telse\n\t\troot[\"CanvasFilter\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(1);\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t// Grayscale algorithms\n\tvar grayscaleAlgorithms = ['none', 'average', 'desaturation', 'decomposition-min', 'decomposition-max', 'luma', 'luma-601', 'luma-709', 'luma-240', 'red-chanel', 'green-chanel', 'blue-chanel'];\n\t\n\t// Trucate color value in the 0-255 range\n\tfunction color(color) {\n\t    return color < 0 ? 0 : color > 255 ? 255 : color;\n\t}\n\t\n\t// Filters ...\n\tfunction invertColor(data, i, value) {\n\t    if (value) {\n\t        data[i] = color(255 - data[i]);\n\t        data[i + 1] = color(255 - data[i + 1]);\n\t        data[i + 2] = color(255 - data[i + 2]);\n\t    }\n\t}\n\t\n\tfunction brightness(data, i, value) {\n\t    if (value !== undefined) {\n\t        data[i] = color(data[i] + value);\n\t        data[i + 1] = color(data[i + 1] + value);\n\t        data[i + 2] = color(data[i + 2] + value);\n\t    }\n\t}\n\t\n\tfunction contrast(data, i, value) {\n\t    if (value !== undefined) {\n\t        data[i] = color(value * (data[i] - 128) + 128);\n\t        data[i + 1] = color(value * (data[i + 1] - 128) + 128);\n\t        data[i + 2] = color(value * (data[i + 2] - 128) + 128);\n\t    }\n\t}\n\t\n\tfunction gamma(data, i, value) {\n\t    if (value !== undefined) {\n\t        data[i] = color(Math.exp(Math.log(255 * (data[i] / 255)) * value));\n\t        data[i + 1] = color(Math.exp(Math.log(255 * (data[i + 1] / 255)) * value));\n\t        data[i + 2] = color(Math.exp(Math.log(255 * (data[i + 2] / 255)) * value));\n\t    }\n\t}\n\t\n\tfunction grayscale(data, i, algorithm, shades) {\n\t    // Graysale\n\t    // http://www.tannerhelland.com/3643/grayscale-image-algorithm-vb6/\n\t\n\t    // Unsupported algorithm\n\t    if (grayscaleAlgorithms.indexOf(algorithm) === -1) {\n\t        throw new Error('Unsupported grayscale algorithm: ' + algorithm);\n\t    }\n\t\n\t    // None\n\t    if (algorithm === 'none') {\n\t        return null;\n\t    }\n\t\n\t    // Get Red/Green/Blue values\n\t    var gray = void 0;\n\t    var r = data[i];\n\t    var g = data[i + 1];\n\t    var b = data[i + 2];\n\t\n\t    switch (algorithm) {\n\t        case 'average':\n\t            gray = (r + g + b) / 3;\n\t            break;\n\t\n\t        case 'luma':\n\t            // Default\n\t            gray = r * 0.3 + g * 0.59 + b * 0.11;\n\t            break;\n\t\n\t        case 'luma-601':\n\t            // CCIR-601\n\t            gray = r * 0.299 + g * 0.587 + b * 0.114;\n\t            break;\n\t\n\t        case 'luma-709':\n\t            // ITU-R-709\n\t            gray = r * 0.2126 + g * 0.7152 + b * 0.0722;\n\t            break;\n\t\n\t        case 'luma-240':\n\t            // SMPTE-240M\n\t            gray = r * 0.212 + g * 0.701 + b * 0.087;\n\t            break;\n\t\n\t        case 'desaturation':\n\t            gray = (Math.max(r, g, b) + Math.min(r, g, b)) / 2;\n\t            break;\n\t\n\t        case 'decomposition-min':\n\t            gray = Math.min(r, g, b);\n\t            break;\n\t\n\t        case 'decomposition-max':\n\t            gray = Math.max(r, g, b);\n\t            break;\n\t\n\t        case 'red-chanel':\n\t            gray = r;\n\t            break;\n\t\n\t        case 'green-chanel':\n\t            gray = g;\n\t            break;\n\t\n\t        case 'blue-chanel':\n\t            gray = b;\n\t            break;\n\t    }\n\t\n\t    // Shades of gray\n\t    if (shades !== undefined) {\n\t        gray = parseInt(gray / shades) * shades;\n\t    }\n\t\n\t    // Force integer\n\t    gray = parseInt(gray);\n\t\n\t    // Set new r/g/b values\n\t    data[i] = color(gray);\n\t    data[i + 1] = color(gray);\n\t    data[i + 2] = color(gray);\n\t}\n\t\n\t// Apply filters on provided canvas\n\tfunction canvasFilters(canvas, settings) {\n\t    settings = Object.assign({}, {\n\t        smoothing: false, // Smoothing [true|fale]\n\t        brightness: 0, // Image brightness [-255 to +255]\n\t        contrast: 0, // Image contrast [-255 to +255]\n\t        gamma: 0, // Image gamma correction [0.01 to 7.99]\n\t        grayscale: 'none', // Graysale algorithm [average, luma, luma-601, luma-709, luma-240, desaturation, decomposition-[min|max], [red|green|blue]-chanel]\n\t        shadesOfGray: 256, // Number of shades of gray [2-256]\n\t        invertColor: false // Invert color...\n\t    }, settings || {});\n\t\n\t    // Get canvas 2d context\n\t    var context = canvas.getContext('2d');\n\t\n\t    // Smoothing\n\t    if (context.imageSmoothingEnabled !== undefined) {\n\t        context.imageSmoothingEnabled = settings.smoothing;\n\t    } else {\n\t        context.mozImageSmoothingEnabled = settings.smoothing;\n\t        context.webkitImageSmoothingEnabled = settings.smoothing;\n\t        context.msImageSmoothingEnabled = settings.smoothing;\n\t        context.oImageSmoothingEnabled = settings.smoothing;\n\t    }\n\t\n\t    // Get image data\n\t    var imageData = context.getImageData(0, 0, canvas.width, canvas.height);\n\t    var data = imageData.data;\n\t\n\t    var contrastFactor = void 0,\n\t        brightnessOffset = void 0,\n\t        gammaCorrection = void 0,\n\t        shadesOfGrayFactor = void 0;\n\t\n\t    if (settings.contrast !== 0) {\n\t        contrastFactor = 259 * (settings.contrast + 255) / (255 * (259 - settings.contrast));\n\t    }\n\t\n\t    if (settings.brightness !== 0) {\n\t        brightnessOffset = settings.brightness;\n\t    }\n\t\n\t    if (settings.gamma !== 0) {\n\t        gammaCorrection = 1 / settings.gamma;\n\t    }\n\t\n\t    // Shades of gray\n\t    if (settings.shadesOfGray > 1 && settings.shadesOfGray < 256) {\n\t        shadesOfGrayFactor = 255 / (settings.shadesOfGray - 1);\n\t    }\n\t\n\t    // For each pixel\n\t    for (var i = 0, il = data.length; i < il; i += 4) {\n\t        // Apply filters\n\t        invertColor(data, i, settings.invertColor);\n\t        brightness(data, i, brightnessOffset);\n\t        contrast(data, i, contrastFactor);\n\t        gamma(data, i, gammaCorrection);\n\t        grayscale(data, i, settings.grayscale, shadesOfGrayFactor);\n\t    }\n\t\n\t    // Write new image data on the context\n\t    context.putImageData(imageData, 0, 0);\n\t}\n\t\n\t// Exports\n\texports.canvasFilters = canvasFilters;\n\texports.default = canvasFilters;\n\n/***/ }\n/******/ ])\n});\n;\n//# sourceMappingURL=lw.canvas-filters.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/lw.canvas-filters/dist/lw.canvas-filters.js\n// module id = 2\n// module chunks = 0"],"sourceRoot":""}