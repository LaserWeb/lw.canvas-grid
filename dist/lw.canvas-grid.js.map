{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///lw.canvas-grid.js","webpack:///webpack/bootstrap f522341bb6c78700e285","webpack:///./canvas-grid.js","webpack:///../~/lw.canvas-filters/dist/lw.canvas-filters.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","_classCallCheck","instance","Constructor","TypeError","Object","defineProperty","value","CanvasGrid","undefined","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","prototype","_lw","_lw2","settings","cellSize","scaleRatio","filters","assign","size","width","height","cols","rows","file","image","url","canvas","pixels","input","File","loadFromFile","Image","loadFromImage","URL","loadFromURL","trim","Promise","reject","Error","src","resolve","_this","onload","event","then","result","_processImage","catch","onerror","_this2","_loadImage","createObjectURL","_this3","_this4","Math","round","ceil","line","context","x","y","sx","sy","sw","sh","document","createElement","getContext","fillStyle","fillRect","drawImage","push","parseInt","isNaN","col","row","pixelData","getImageData","data","color","r","g","b","a","gray","grid","coords","e","o","t","n","exp","log","indexOf","s","max","min","smoothing","brightness","contrast","gamma","grayscale","shadesOfGray","imageSmoothingEnabled","mozImageSmoothingEnabled","webkitImageSmoothingEnabled","msImageSmoothingEnabled","oImageSmoothingEnabled","d","l","h","u","putImageData","canvasFilters"],"mappings":"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","file":"lw.canvas-grid.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"CanvasGrid\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"CanvasGrid\"] = factory();\n\telse\n\t\troot[\"CanvasGrid\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"CanvasGrid\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"CanvasGrid\"] = factory();\n\telse\n\t\troot[\"CanvasGrid\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(1);\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.CanvasGrid = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _lw = __webpack_require__(2);\n\t\n\tvar _lw2 = _interopRequireDefault(_lw);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t// CanvasGrid class\n\tvar CanvasGrid = function () {\n\t    // Class constructor...\n\t    function CanvasGrid(settings) {\n\t        _classCallCheck(this, CanvasGrid);\n\t\n\t        // Init properties\n\t        this.cellSize = 1024;\n\t        this.scaleRatio = 1;\n\t        this.filters = {};\n\t\n\t        Object.assign(this, settings || {});\n\t\n\t        this.size = { width: 0, height: 0, cols: 0, rows: 0 };\n\t        this.file = null;\n\t        this.image = null;\n\t        this.url = null;\n\t        this.canvas = [];\n\t        this.pixels = [];\n\t    }\n\t\n\t    // <input> can be Image, File, URL object or URL string (http://* or data:image/*)\n\t\n\t\n\t    _createClass(CanvasGrid, [{\n\t        key: 'load',\n\t        value: function load(input) {\n\t            // Load File object\n\t            if (input instanceof File) {\n\t                return this.loadFromFile(input);\n\t            }\n\t\n\t            // Load Image object\n\t            if (input instanceof Image) {\n\t                return this.loadFromImage(input);\n\t            }\n\t\n\t            // Load URL object\n\t            if (typeof input === 'string' || input instanceof URL) {\n\t                return this.loadFromURL(input.trim());\n\t            }\n\t\n\t            // Return rejected promise with an Error object\n\t            return Promise.reject(new Error('Unsupported input format.'));\n\t        }\n\t\n\t        // Load image\n\t\n\t    }, {\n\t        key: '_loadImage',\n\t        value: function _loadImage(src, reject, resolve) {\n\t            var _this = this;\n\t\n\t            // Create Image object\n\t            var image = new Image();\n\t\n\t            // Register for load and error events\n\t            image.onload = function (event) {\n\t                _this.loadFromImage(image).then(function (result) {\n\t                    _this._processImage();\n\t                    resolve(result);\n\t                }).catch(reject);\n\t            };\n\t\n\t            image.onerror = function (event) {\n\t                reject(new Error('Error reading file : ' + src));\n\t            };\n\t\n\t            // Load the image from File url\n\t            image.src = src;\n\t        }\n\t\n\t        // Load from File object\n\t\n\t    }, {\n\t        key: 'loadFromFile',\n\t        value: function loadFromFile(input) {\n\t            var _this2 = this;\n\t\n\t            return new Promise(function (resolve, reject) {\n\t                // Bad input type\n\t                if (!(input instanceof File)) {\n\t                    reject(new Error('Input param must be a File object.'));\n\t                }\n\t\n\t                // Set input file\n\t                _this2.file = input;\n\t\n\t                // Load image\n\t                _this2._loadImage(URL.createObjectURL(input), reject, resolve);\n\t            });\n\t        }\n\t\n\t        // Load from URL object or string\n\t\n\t    }, {\n\t        key: 'loadFromURL',\n\t        value: function loadFromURL(input) {\n\t            var _this3 = this;\n\t\n\t            return new Promise(function (resolve, reject) {\n\t                // Bad input type\n\t                if (!(input instanceof URL) && typeof input !== 'string') {\n\t                    reject(new Error('Input param must be a URL string or object.'));\n\t                }\n\t\n\t                // Create url object\n\t                var url = input instanceof URL ? input : new URL(input);\n\t\n\t                // Set url\n\t                _this3.url = url;\n\t\n\t                // Load image\n\t                _this3._loadImage(url, reject, resolve);\n\t            });\n\t        }\n\t\n\t        // Load from Image object\n\t\n\t    }, {\n\t        key: 'loadFromImage',\n\t        value: function loadFromImage(input) {\n\t            var _this4 = this;\n\t\n\t            return new Promise(function (resolve, reject) {\n\t                // Bad input type\n\t                if (!(input instanceof Image)) {\n\t                    reject(new Error('Input param must be a Image object.'));\n\t                }\n\t\n\t                // Set input image\n\t                _this4.image = input;\n\t\n\t                resolve(_this4);\n\t            });\n\t        }\n\t    }, {\n\t        key: '_processImage',\n\t        value: function _processImage() {\n\t            // Reset canvas grid\n\t            this.canvas = [];\n\t            this.pixels = [];\n\t\n\t            // Calculate grid size\n\t            var width = Math.round(this.image.width * this.scaleRatio);\n\t            var height = Math.round(this.image.height * this.scaleRatio);\n\t            var cols = Math.ceil(width / this.cellSize);\n\t            var rows = Math.ceil(height / this.cellSize);\n\t\n\t            this.size = { width: width, height: height, cols: cols, rows: rows };\n\t\n\t            // Create canvas grid\n\t            var line = null;\n\t            var canvas = null;\n\t            var context = null;\n\t\n\t            var x = null; // cols\n\t            var y = null; // rows\n\t            var sx = null; // scaled cols\n\t            var sy = null; // scaled rows\n\t            var sw = null; // scaled width\n\t            var sh = null; // scaled height\n\t\n\t            // For each line\n\t            for (y = 0; y < this.size.rows; y++) {\n\t                // Reset current line\n\t                line = [];\n\t\n\t                // For each column\n\t                for (x = 0; x < this.size.cols; x++) {\n\t                    // Create canvas element\n\t                    canvas = document.createElement('canvas');\n\t\n\t                    // Set canvas size\n\t                    if (x === 0 || x < this.size.cols - 1) {\n\t                        canvas.width = this.size.width < this.cellSize ? this.size.width : this.cellSize;\n\t                    } else {\n\t                        // Get the rest for the last item (except the first one)\n\t                        canvas.width = this.size.width % this.cellSize;\n\t                    }\n\t\n\t                    if (y === 0 || y < this.size.rows - 1) {\n\t                        canvas.height = this.size.height < this.cellSize ? this.size.height : this.cellSize;\n\t                    } else {\n\t                        // Get the rest for the last item (except the first one)\n\t                        canvas.height = this.size.height % this.cellSize;\n\t                    }\n\t\n\t                    // Get canvas 2d context\n\t                    context = canvas.getContext('2d');\n\t\n\t                    // Fill withe background (avoid alpha chanel calculation)\n\t                    context.fillStyle = 'white';\n\t                    context.fillRect(0, 0, canvas.width, canvas.height);\n\t\n\t                    // Draw the part of image in the canvas (scale)\n\t                    sw = canvas.width / this.scaleRatio;\n\t                    sh = canvas.height / this.scaleRatio;\n\t                    sx = x * this.cellSize / this.scaleRatio;\n\t                    sy = y * this.cellSize / this.scaleRatio;\n\t\n\t                    context.drawImage(this.image, sx, sy, sw, sh, 0, 0, canvas.width, canvas.height);\n\t\n\t                    // Apply image filters\n\t                    (0, _lw2.default)(canvas, this.filters);\n\t\n\t                    // Add the canvas to current line\n\t                    line.push(canvas);\n\t                }\n\t\n\t                // Add the line to canvas grid\n\t                this.canvas.push(line);\n\t            }\n\t        }\n\t    }, {\n\t        key: 'getPixel',\n\t        value: function getPixel(x, y) {\n\t            // Test coords validity\n\t            x = parseInt(x);\n\t            y = parseInt(y);\n\t\n\t            if (isNaN(x) || isNaN(y)) {\n\t                throw new Error('[x, y] params must be Integer.');\n\t            }\n\t\n\t            // Test coords range\n\t            if (x < 0 || x >= this.size.width) {\n\t                throw new Error('Out of range: x = ' + x + ', max: ' + this.size.width);\n\t            }\n\t\n\t            if (y < 0 || y >= this.size.height) {\n\t                throw new Error('Out of range: y = ' + y + ', max: ' + this.size.height);\n\t            }\n\t\n\t            // Calculate target canvas coords\n\t            var col = parseInt(x / this.cellSize);\n\t            var row = parseInt(y / this.cellSize);\n\t\n\t            // Adjuste x/y values relative to canvas origin\n\t            col && (x -= this.cellSize * col);\n\t            row && (y -= this.cellSize * row);\n\t\n\t            // Get pixel data\n\t            var canvas = this.canvas[row][col];\n\t            var context = canvas.getContext('2d');\n\t            var pixelData = context.getImageData(x, y, 1, 1).data;\n\t\n\t            return {\n\t                color: { r: pixelData[0], g: pixelData[1], b: pixelData[2], a: pixelData[3] },\n\t                gray: (pixelData[0] + pixelData[1] + pixelData[2]) / 3,\n\t                grid: { col: col, row: row },\n\t                coords: { x: x, y: y }\n\t            };\n\t        }\n\t    }]);\n\t\n\t    return CanvasGrid;\n\t}();\n\t\n\t// Exports\n\t\n\t\n\texports.CanvasGrid = CanvasGrid;\n\texports.default = CanvasGrid;\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t!function(e,a){ true?module.exports=a():\"function\"==typeof define&&define.amd?define(\"CanvasFilter\",[],a):\"object\"==typeof exports?exports.CanvasFilter=a():e.CanvasFilter=a()}(this,function(){return function(e){function a(o){if(t[o])return t[o].exports;var n=t[o]={exports:{},id:o,loaded:!1};return e[o].call(n.exports,n,n.exports,a),n.loaded=!0,n.exports}var t={};return a.m=e,a.c=t,a.p=\"\",a(0)}([function(e,a,t){e.exports=t(1)},function(e,a){\"use strict\";function t(e){return e<0?0:e>255?255:e}function o(e,a,o){void 0!==o&&(e[a]=t(e[a]+o),e[a+1]=t(e[a+1]+o),e[a+2]=t(e[a+2]+o))}function n(e,a,o){void 0!==o&&(e[a]=t(o*(e[a]-128)+128),e[a+1]=t(o*(e[a+1]-128)+128),e[a+2]=t(o*(e[a+2]-128)+128))}function r(e,a,o){void 0!==o&&(e[a]=t(Math.exp(Math.log(255*(e[a]/255))*o)),e[a+1]=t(Math.exp(Math.log(255*(e[a+1]/255))*o)),e[a+2]=t(Math.exp(Math.log(255*(e[a+2]/255))*o)))}function i(e,a,o,n){if(m.indexOf(o)===-1)throw new Error(\"Unsupported grayscale algorithm: \"+o);if(\"none\"===o)return null;var r=void 0,i=e[a],s=e[a+1],c=e[a+2];switch(o){case\"average\":r=(i+s+c)/3;break;case\"luma\":r=.3*i+.59*s+.11*c;break;case\"luma-601\":r=.299*i+.587*s+.114*c;break;case\"luma-709\":r=.2126*i+.7152*s+.0722*c;break;case\"luma-240\":r=.212*i+.701*s+.087*c;break;case\"desaturation\":r=(Math.max(i,s,c)+Math.min(i,s,c))/2;break;case\"decomposition-min\":r=Math.min(i,s,c);break;case\"decomposition-max\":r=Math.max(i,s,c);break;case\"red-chanel\":r=i;break;case\"green-chanel\":r=s;break;case\"blue-chanel\":r=c}void 0!==n&&(r=parseInt(r/n)*n),r=parseInt(r),e[a]=t(r),e[a+1]=t(r),e[a+2]=t(r)}function s(e,a){a=Object.assign({},{smoothing:!1,brightness:0,contrast:0,gamma:0,grayscale:\"none\",shadesOfGray:256},a||{});var t=e.getContext(\"2d\");void 0!==t.imageSmoothingEnabled?t.imageSmoothingEnabled=a.smoothing:(t.mozImageSmoothingEnabled=a.smoothing,t.webkitImageSmoothingEnabled=a.smoothing,t.msImageSmoothingEnabled=a.smoothing,t.oImageSmoothingEnabled=a.smoothing);var s=t.getImageData(0,0,e.width,e.height),m=s.data,c=void 0,d=void 0,l=void 0,h=void 0;0!==a.contrast&&(c=259*(a.contrast+255)/(255*(259-a.contrast))),0!==a.brightness&&(d=a.brightness),0!==a.gamma&&(l=1/a.gamma),a.shadesOfGray>1&&a.shadesOfGray<256&&(h=255/(a.shadesOfGray-1));for(var g=0,u=m.length;g<u;g+=4)o(m,g,d),n(m,g,c),r(m,g,l),i(m,g,a.grayscale,h);t.putImageData(s,0,0)}Object.defineProperty(a,\"__esModule\",{value:!0});var m=[\"none\",\"average\",\"desaturation\",\"decomposition-min\",\"decomposition-max\",\"luma\",\"luma-601\",\"luma-709\",\"luma-240\",\"red-chanel\",\"green-chanel\",\"blue-chanel\"];a.canvasFilters=s,a.default=s}])});\n\t//# sourceMappingURL=lw.canvas-filters.js.map\n\n/***/ }\n/******/ ])\n});\n;\n\n\n// WEBPACK FOOTER //\n// lw.canvas-grid.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap f522341bb6c78700e285","import canvasFilters from 'lw.canvas-filters'\n\n// CanvasGrid class\nclass CanvasGrid {\n    // Class constructor...\n    constructor(settings) {\n        // Init properties\n        this.cellSize   = 1024\n        this.scaleRatio = 1\n        this.filters    = {}\n\n        Object.assign(this, settings || {})\n\n        this.size   = { width: 0, height: 0, cols: 0, rows: 0 }\n        this.file   = null\n        this.image  = null\n        this.url    = null\n        this.canvas = []\n        this.pixels = []\n    }\n\n    // <input> can be Image, File, URL object or URL string (http://* or data:image/*)\n    load(input) {\n        // Load File object\n        if (input instanceof File) {\n            return this.loadFromFile(input)\n        }\n\n        // Load Image object\n        if (input instanceof Image) {\n            return this.loadFromImage(input)\n        }\n\n        // Load URL object\n        if (typeof input === 'string' || input instanceof URL) {\n            return this.loadFromURL(input.trim())\n        }\n\n        // Return rejected promise with an Error object\n        return Promise.reject(new Error('Unsupported input format.'))\n    }\n\n    // Load image\n    _loadImage(src, reject, resolve) {\n        // Create Image object\n        let image = new Image()\n\n        // Register for load and error events\n        image.onload = event => {\n            this.loadFromImage(image).then(result => {\n                this._processImage()\n                resolve(result)\n            }).catch(reject)\n        }\n\n        image.onerror = event => {\n            reject(new Error('Error reading file : ' + src))\n        }\n\n        // Load the image from File url\n        image.src = src\n    }\n\n    // Load from File object\n    loadFromFile(input) {\n        return new Promise((resolve, reject) => {\n            // Bad input type\n            if (! (input instanceof File)) {\n                reject(new Error('Input param must be a File object.'))\n            }\n\n            // Set input file\n            this.file = input\n\n            // Load image\n            this._loadImage(URL.createObjectURL(input), reject, resolve)\n        })\n    }\n\n    // Load from URL object or string\n    loadFromURL(input) {\n        return new Promise((resolve, reject) => {\n            // Bad input type\n            if (! (input instanceof URL) && typeof input !== 'string') {\n                reject(new Error('Input param must be a URL string or object.'))\n            }\n\n            // Create url object\n            let url = input instanceof URL ? input : new URL(input)\n\n            // Set url\n            this.url = url\n\n            // Load image\n            this._loadImage(url, reject, resolve)\n        })\n    }\n\n    // Load from Image object\n    loadFromImage(input) {\n        return new Promise((resolve, reject) => {\n            // Bad input type\n            if (! (input instanceof Image)) {\n                reject(new Error('Input param must be a Image object.'))\n            }\n\n            // Set input image\n            this.image = input\n\n            resolve(this)\n        })\n    }\n\n    _processImage() {\n        // Reset canvas grid\n        this.canvas = []\n        this.pixels = []\n\n        // Calculate grid size\n        let width  = Math.round(this.image.width * this.scaleRatio)\n        let height = Math.round(this.image.height * this.scaleRatio)\n        let cols   = Math.ceil(width / this.cellSize)\n        let rows   = Math.ceil(height / this.cellSize)\n\n        this.size = { width, height, cols, rows }\n\n        // Create canvas grid\n        let line    = null\n        let canvas  = null\n        let context = null\n\n        let x  = null // cols\n        let y  = null // rows\n        let sx = null // scaled cols\n        let sy = null // scaled rows\n        let sw = null // scaled width\n        let sh = null // scaled height\n\n        // For each line\n        for (y = 0; y < this.size.rows; y++) {\n            // Reset current line\n            line = []\n\n            // For each column\n            for (x = 0; x < this.size.cols; x++) {\n                // Create canvas element\n                canvas = document.createElement('canvas')\n\n                // Set canvas size\n                if (x === 0 || x < (this.size.cols - 1)) {\n                    canvas.width = this.size.width < this.cellSize\n                                 ? this.size.width : this.cellSize\n                }\n                else {\n                    // Get the rest for the last item (except the first one)\n                    canvas.width = this.size.width % this.cellSize\n                }\n\n                if (y === 0 || y < (this.size.rows - 1)) {\n                    canvas.height = this.size.height < this.cellSize\n                                  ? this.size.height : this.cellSize\n                }\n                else {\n                    // Get the rest for the last item (except the first one)\n                    canvas.height = this.size.height % this.cellSize\n                }\n\n                // Get canvas 2d context\n                context = canvas.getContext('2d')\n\n                // Fill withe background (avoid alpha chanel calculation)\n                context.fillStyle = 'white'\n                context.fillRect(0, 0, canvas.width, canvas.height)\n\n                // Draw the part of image in the canvas (scale)\n                sw = canvas.width / this.scaleRatio\n                sh = canvas.height / this.scaleRatio\n                sx = x * this.cellSize / this.scaleRatio\n                sy = y * this.cellSize / this.scaleRatio\n\n                context.drawImage(\n                    this.image, sx, sy, sw, sh,\n                    0, 0, canvas.width, canvas.height\n                )\n\n                // Apply image filters\n                canvasFilters(canvas, this.filters)\n\n                // Add the canvas to current line\n                line.push(canvas)\n            }\n\n            // Add the line to canvas grid\n            this.canvas.push(line)\n        }\n    }\n\n    getPixel(x, y) {\n        // Test coords validity\n        x = parseInt(x)\n        y = parseInt(y)\n\n        if (isNaN(x) || isNaN(y)) {\n            throw new Error('[x, y] params must be Integer.')\n        }\n\n        // Test coords range\n        if (x < 0 || x >= this.size.width) {\n            throw new Error('Out of range: x = ' + x + ', max: ' + this.size.width)\n        }\n\n        if (y < 0 || y >= this.size.height) {\n            throw new Error('Out of range: y = ' + y + ', max: ' + this.size.height)\n        }\n\n        // Calculate target canvas coords\n        let col = parseInt(x / this.cellSize)\n        let row = parseInt(y / this.cellSize)\n\n        // Adjuste x/y values relative to canvas origin\n        col && (x -= this.cellSize * col)\n        row && (y -= this.cellSize * row)\n\n        // Get pixel data\n        let canvas    = this.canvas[row][col]\n        let context   = canvas.getContext('2d')\n        let pixelData = context.getImageData(x, y, 1, 1).data\n\n        return {\n            color : { r: pixelData[0], g: pixelData[1], b: pixelData[2], a: pixelData[3] },\n            gray  : (pixelData[0] + pixelData[1] + pixelData[2]) / 3,\n            grid  : { col, row },\n            coords: { x, y }\n        }\n    }\n}\n\n// Exports\nexport { CanvasGrid }\nexport default CanvasGrid\n\n\n\n// WEBPACK FOOTER //\n// ./canvas-grid.js","!function(e,a){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=a():\"function\"==typeof define&&define.amd?define(\"CanvasFilter\",[],a):\"object\"==typeof exports?exports.CanvasFilter=a():e.CanvasFilter=a()}(this,function(){return function(e){function a(o){if(t[o])return t[o].exports;var n=t[o]={exports:{},id:o,loaded:!1};return e[o].call(n.exports,n,n.exports,a),n.loaded=!0,n.exports}var t={};return a.m=e,a.c=t,a.p=\"\",a(0)}([function(e,a,t){e.exports=t(1)},function(e,a){\"use strict\";function t(e){return e<0?0:e>255?255:e}function o(e,a,o){void 0!==o&&(e[a]=t(e[a]+o),e[a+1]=t(e[a+1]+o),e[a+2]=t(e[a+2]+o))}function n(e,a,o){void 0!==o&&(e[a]=t(o*(e[a]-128)+128),e[a+1]=t(o*(e[a+1]-128)+128),e[a+2]=t(o*(e[a+2]-128)+128))}function r(e,a,o){void 0!==o&&(e[a]=t(Math.exp(Math.log(255*(e[a]/255))*o)),e[a+1]=t(Math.exp(Math.log(255*(e[a+1]/255))*o)),e[a+2]=t(Math.exp(Math.log(255*(e[a+2]/255))*o)))}function i(e,a,o,n){if(m.indexOf(o)===-1)throw new Error(\"Unsupported grayscale algorithm: \"+o);if(\"none\"===o)return null;var r=void 0,i=e[a],s=e[a+1],c=e[a+2];switch(o){case\"average\":r=(i+s+c)/3;break;case\"luma\":r=.3*i+.59*s+.11*c;break;case\"luma-601\":r=.299*i+.587*s+.114*c;break;case\"luma-709\":r=.2126*i+.7152*s+.0722*c;break;case\"luma-240\":r=.212*i+.701*s+.087*c;break;case\"desaturation\":r=(Math.max(i,s,c)+Math.min(i,s,c))/2;break;case\"decomposition-min\":r=Math.min(i,s,c);break;case\"decomposition-max\":r=Math.max(i,s,c);break;case\"red-chanel\":r=i;break;case\"green-chanel\":r=s;break;case\"blue-chanel\":r=c}void 0!==n&&(r=parseInt(r/n)*n),r=parseInt(r),e[a]=t(r),e[a+1]=t(r),e[a+2]=t(r)}function s(e,a){a=Object.assign({},{smoothing:!1,brightness:0,contrast:0,gamma:0,grayscale:\"none\",shadesOfGray:256},a||{});var t=e.getContext(\"2d\");void 0!==t.imageSmoothingEnabled?t.imageSmoothingEnabled=a.smoothing:(t.mozImageSmoothingEnabled=a.smoothing,t.webkitImageSmoothingEnabled=a.smoothing,t.msImageSmoothingEnabled=a.smoothing,t.oImageSmoothingEnabled=a.smoothing);var s=t.getImageData(0,0,e.width,e.height),m=s.data,c=void 0,d=void 0,l=void 0,h=void 0;0!==a.contrast&&(c=259*(a.contrast+255)/(255*(259-a.contrast))),0!==a.brightness&&(d=a.brightness),0!==a.gamma&&(l=1/a.gamma),a.shadesOfGray>1&&a.shadesOfGray<256&&(h=255/(a.shadesOfGray-1));for(var g=0,u=m.length;g<u;g+=4)o(m,g,d),n(m,g,c),r(m,g,l),i(m,g,a.grayscale,h);t.putImageData(s,0,0)}Object.defineProperty(a,\"__esModule\",{value:!0});var m=[\"none\",\"average\",\"desaturation\",\"decomposition-min\",\"decomposition-max\",\"luma\",\"luma-601\",\"luma-709\",\"luma-240\",\"red-chanel\",\"green-chanel\",\"blue-chanel\"];a.canvasFilters=s,a.default=s}])});\n//# sourceMappingURL=lw.canvas-filters.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/lw.canvas-filters/dist/lw.canvas-filters.js\n// module id = 2\n// module chunks = 0"],"sourceRoot":""}